<flow-definition plugin="workflow-job@1182.v60a_e6279b_579">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2086.v12b_420f036e5" />
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2086.v12b_420f036e5">
      <jobProperties />
      <triggers />
      <parameters />
      <options />
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Update Async Profiler repository.&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>60</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>@midnight</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2706.v71dd22b_c5a_a_2">
    <script>pipeline {
    agent {
        label "repository"
    }
    stages {
        stage("Checkout Infrastructure Repository") {
            steps {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
            }
        }
        stage("Checkout Repository") {
            steps {
                checkout changelog: true, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/sap']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'async-profiler']], userRemoteConfigs: [[url: 'https://github.com/SAP/async-profiler.git']]]
            }
        }
        stage('Merge') {
            agent {
                dockerfile {
                    dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                    reuseNode true
                    label "repository"
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                    script {
                        env.ASYNC_PROF_BUILD_REQUIRED = sh(
                                script: "SapMachine-Infrastructure/lib/merge_async_prof.sh",
                                returnStatus: true
                        )
                    }
                }
            }
        }
        stage('Check Release') {
            agent {
                dockerfile {
                    dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                    reuseNode true
                    label "repository"
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                    script {
                        env.ASYNC_PROF_RELEASE_TAG = sh(
                                script: "python3 SapMachine-Infrastructure/lib/async_check_release.py",
                                returnStdout: true
                        )
                    }
                }
            }
        }
        stage ('Trigger Snapshot Builds') {
            when {
                expression { env.ASYNC_PROF_BUILD_REQUIRED != "1" }
            }
            steps {
                parallel (
                    linux_aarch64: {
                        build job: 'build-async-profiler-official-snapshot-linux_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                    },
                    linux_ppc64le: {
                        build job: 'build-async-profiler-official-snapshot-linux_ppc64le', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                    },
                    linux_x86_64: {
                        build job: 'build-async-profiler-official-snapshot-linux_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                    },
                    macos_x86_64: {
                        build job: 'build-async-profiler-official-snapshot-macos_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                    },
                    macos_aarch64: {
                        build job: 'build-async-profiler-official-snapshot-macos_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap')]
                    },
                    failFast: false
                )
            }
        }
        stage ('Trigger Release Builds') {
            when {
                expression { env.ASYNC_PROF_RELEASE_TAG != "No new releases" }
            }
            steps {
                parallel (
                    linux_aarch64: {
                        build job: 'build-async-profiler-official-release-linux_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                    },
                    linux_ppc64le: {
                        build job: 'build-async-profiler-official-release-linux_ppc64le', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                    },
                    linux_x86_64: {
                        build job: 'build-async-profiler-official-release-linux_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                    },
                    macos_x86_64: {
                        build job: 'build-async-profiler-official-release-macos_x86_64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                    },
                     macos_aarch64: {
                        build job: 'build-async-profiler-official-release-macos_aarch64', parameters: [string(name: 'ASYNCPROF_GIT_BRANCH', value: 'sap'), string(name: 'GIT_TAG_NAME', value: env.ASYNC_PROF_RELEASE_TAG), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                    },
                    failFast: false
                )
            }
        }
    }
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <disabled>false</disabled>
</flow-definition>