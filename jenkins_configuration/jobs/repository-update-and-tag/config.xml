<flow-definition plugin="workflow-job@1254.v3f64639b_11dd">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5" />
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties />
      <triggers />
      <parameters />
      <options />
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Update SapMachine repository from OpenJDK, tag and build SapMachine releases and create OpenJDK merge PRs.&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>60</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_REPOSITORY</name>
          <description>Update SapMachine repository from OpenJDK.</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TAG_BUILD_AND_MERGE</name>
          <description>Tag new SapMachine releases, build them and create OpenJDK merge PRs.</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>@midnight</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3520.va_8fc49e2f96f">
    <script>pipeline {
    agent {
        label "repository"
    }
    stages {
        stage("Checkout Infrastructure Repository") {
            steps {
                sh '''#!/bin/bash
                    set -ex
                    if [ ! -d SapMachine-Infrastructure ]; then
                      git init SapMachine-Infrastructure
                    fi
                    cd SapMachine-Infrastructure
                    git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                    git checkout --detach FETCH_HEAD
                '''
            }
        }
        stage('Update SapMachine Repository') {
            when {
                expression { params.UPDATE_REPOSITORY == true }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                    sh '''
                        openjdk_repositories=$(python3 SapMachine-Infrastructure/lib/list_openjdk_repositories.py)
                        for i in ${openjdk_repositories}
                        do
                            :
                            SapMachine-Infrastructure/lib/update_repo.sh $i
                        done
                    '''
                }
            }
        }
        stage("Checkout SapMachine Repository") {
            when {
                expression { params.TAG_BUILD_AND_MERGE == true }
            }
            steps {
                sh '''#!/bin/bash
                    set -ex
                    if [ ! -d SapMachine ]; then
                      git init SapMachine &amp;&amp; cd SapMachine
                      git remote add origin https://github.com/SAP/SapMachine.git
                    else
                      cd SapMachine
                    fi
                    git fetch origin
                    git checkout sapmachine
                '''
            }
        }
        stage('Tag, Build and Merge') {
            agent {
                dockerfile {
                    dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                    reuseNode true
                    label "repository"
                }
            }
            when {
                beforeAgent true
                expression { params.TAG_BUILD_AND_MERGE == true }
            }
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD'),
                    usernamePassword(credentialsId: 'sapmachine-jenkins', usernameVariable: 'JENKINS_CREDENTIALS_USR', passwordVariable: 'JENKINS_CREDENTIALS_PSW')
                ]) {
                    sh("cd SapMachine &amp;&amp; python3 ../SapMachine-Infrastructure/lib/tag_build_and_merge.py")
                }
            }
        }
    }
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <disabled>false</disabled>
</flow-definition>