<flow-definition plugin="workflow-job">
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps">
    <script>pipeline {
    agent {
        label 'linux_x86_64'
    }
    stages {
        stage("Checkout Infrastructure Repository") {
            steps {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
            }
        }
        stage("Checkout JTReg") {
            steps {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jtreg']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/openjdk/jtreg.git']]]
            }
        }
        stage('Build') {
            agent {
                dockerfile {
                    label 'linux_x86_64'
                    dir "SapMachine-Infrastructure/dockerfiles/jtreg-build"
                    reuseNode true
                }
            }
            steps {
                script {
                    def jtregVersion
                    def jtregBuild
                    if (params.TAG == "master") {
                        jtregVersion = 99 // just a dummy
                        jtregBuild = params.BUILD_NUMBER
                    } else {
                        def match = params.TAG =~ /jtreg-*([0-9]+(\.[0-9]+)*)((\+|-b)([0-9]+))*/
                        jtregVersion = match[0][1]
                        jtregBuild = match[0][5]
                        if (jtregBuild == null) {
                            jtregBuild = "1"
                        }
                    }
                    if (jtregVersion.toFloat() &lt; 6) {
                        env.BUILD_SCRIPT = "build-all.sh"
                        env.BUILD_VERSION = jtregVersion
                        env.BUILD_NUMBER = 'b'+jtregBuild
                        env.VM_OPT = ""
                    } else {
                        env.BUILD_SCRIPT = "build.sh"
                        env.JTREG_BUILD_NUMBER = jtregBuild
                        env.VM_OPT = "--jdk"
                    }
                }
                sh "cd jtreg &amp;&amp; git checkout ${params.TAG} &amp;&amp; bash make/${BUILD_SCRIPT} ${VM_OPT} /usr/lib/jvm"
            }
            post {
                success {
                    archiveArtifacts allowEmptyArchive: true, artifacts: 'jtreg/build/images/jtreg.zip'
                }
            }
        }
    }
    post {
        always {
            cleanWs deleteDirs: true, disableDeferredWipeout: true
        }
    }
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <actions />
  <description>Build jtreg.&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty />
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>50</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>10</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github">
      <projectUrl>https://github.com/openjdk/jtreg.git</projectUrl>
      <displayName />
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description>The tag/branch to build.</description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_NUMBER</name>
          <description>Manually set the JTREG build number. Only used when TAG parameter does not contain a build number.</description>
          <defaultValue>99</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
</flow-definition>